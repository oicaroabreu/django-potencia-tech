name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  SECRET_KEY: ${{ secrets.SECRET_KEY }}

jobs:
  build:

    runs-on: ubuntu-latest
    container:
      image: python:3.8-slim-buster

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Install Dependencies and run Migrations
      run: |
        python -m pip install --upgrade pip
        # pip install poetry
        # poetry install
        pip install -r requirements.txt
        python manage.py makemigrations --noinput
        python manage.py migrate --settings=config.settings_test

    - name: Tests and Coverage with pytest - over Sqlite3 temp DB
      run: |      
        python -m pytest . --cov-report term --cov=. --cov-fail-under=80

    - name: Check Lint with flake8
      run: |
        python -m flake8 --check --diff . |
        flake8 .

    - name: Black Check
      run: |
        python -m black --check --diff . |
        python -m black .
    
    - name: Isort Check
      run: |
        python -m isort --check --diff . |
        python -m isort .

    - name: Bandit Security Check
      run: |
        python -m  bandit -c bandit.yml -r .
  
    - name: Safety Check
      run: |
        python -m safety check

    - name: Render Deployment
      uses: sws2apps/render-deployment@v1.6.0
      with:
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
          apiKey: ${{ secrets.RENDER_API_KEY }}
          multipleDeployment: false
